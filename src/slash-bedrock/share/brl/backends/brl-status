#!/bedrock/libexec/busybox sh
#
# brl status
#
#      This program is free software; you can redistribute it and/or
#      modify it under the terms of the GNU General Public License
#      version 2 as published by the Free Software Foundation.
#
# Copyright (c) 2012-2018 Daniel Thau <danthau@bedrocklinux.org>
#
# brl help::3::${color_cmd}status    ${color_norm}Query ${color_term}stratum${color_norm} status
#
# Prints specified stratum's status.

. /bedrock/share/common-code

print_help() {
	printf "Usage: ${color_cmd}brl status ${color_sub}[options] <strata>${color_norm}

Prints specified ${color_term}stratum${color_norm}'s status.  The status may be one of the following:
${color_term}enabled${color_norm}, ${color_term}disabled${color_norm}, ${color_term}hidden${color_norm}, or ${color_term}broken${color_norm}.  If no ${color_term}strata${color_norm} are specified, defaults to
all ${color_term}strata${color_norm}.

Options:
  ${color_cmd}-h${color_norm}, ${color_cmd}--help     ${color_norm}print this message

Examples:
  ${color_cmd}$ brl status
  ${color_strat}alpine${color_glue}: ${color_okay}enabled
  ${color_strat}arch${color_glue}: ${color_okay}enabled
  ${color_strat}centos${color_glue}: ${color_okay}enabled
  ${color_strat}debian${color_glue}: ${color_okay}enabled
  ${color_strat}devuan${color_glue}: ${color_okay}enabled
  ${color_rcmd}# strat devuan umount /sys
  ${color_cmd}$ brl status devuan
  ${color_strat}devuan${color_glue}: ${color_alert}broken
    ${color_cmd}/sys${color_norm} mount point is ${color_alert}missing${color_norm}
  ${color_rcmd}# brl disable devuan
  ${color_cmd}$ brl status devuan
  ${color_strat}devuan${color_glue}: ${color_norm}disabled
  ${color_rcmd}# brl hide devuan
  ${color_cmd}$ brl status devuan
  ${color_strat}devuan${color_glue}: ${color_norm}hidden
  ${color_cmd}$ brl status alpine arch
  ${color_strat}alpine${color_glue}: ${color_okay}enabled
  ${color_strat}arch${color_glue}: ${color_okay}enabled
${color_norm}"
}

check_mnt() {
	stratum="${1}"
	root="$(stratum_root --empty "${stratum}")"
	mnt="${2}"
	tgt_type="${3}"
	tgt_share="${4}"

	details="$(mount_details "${stratum}" "${mnt}")"
	type="$(echo "${details}" | cut -d: -f1)"
	global="$(echo "${details}" | cut -d: -f2)"
	shared="$(echo "${details}" | cut -d: -f3)"

	if [ "${type}" = "missing" ]; then
		problem="${problem}  ${color_cmd}${mnt}${color_norm} mount point is ${color_alert}missing${color_norm}\\n"
	elif [ -n "${tgt_type}" ] && [ "${type}" != "${tgt_type}" ]; then
		problem="${problem}  ${color_cmd}${mnt}${color_norm} is ${type} ${color_alert}rather than${color_norm} ${tgt_type}\\n"
	elif ! "${global}"; then
		problem="${problem}  ${color_cmd}${mnt}${color_norm} is ${color_alert}local${color_norm}\\n"
	elif ! "${shared}" && "${tgt_share}"; then
		problem="${problem}  ${color_cmd}${mnt}${color_norm} is ${color_alert}bound${color_norm}\\n"
	elif "${shared}" && ! "${tgt_share}"; then
		problem="${problem}  ${color_cmd}${mnt}${color_norm} is ${color_alert}shared${color_norm}\\n"
	fi
}

check_links() {
	root="${1}"
	for link in $(cfg_keys "symlinks"); do
		target="$(cfg_values "symlinks" "${link}")"
		actual="$(stinit busybox readlink "${root}${link}")" || true
		# hard code /etc/mtab to support effectively equivalent variations of /proc/mounts
		if [ "${link}" = "/etc/mtab" ] && [ "${actual}" = "/proc/mounts" ]; then
			continue
		fi
		if [ "${link}" = "/etc/mtab" ] && [ "${actual}" = "../proc/mounts" ]; then
			continue
		fi
		if [ "${link}" = "/etc/mtab" ] && [ "${actual}" = "/proc/self/mounts" ]; then
			continue
		fi
		if [ "${link}" = "/etc/mtab" ] && [ "${actual}" = "../proc/self/mounts" ]; then
			continue
		fi

		if [ "${target}" != "${actual}" ]; then
			problem="${problem}  ${color_file}${link}${color_norm} is ${color_alert}not a symlink${color_norm} to ${color_file}${target}${color_norm}\\n"
		fi
	done
}

check_bedrock() {
	stratum="${1}"
	root="$(stratum_root --empty "${stratum}")"
	problem=""

	check_links "${root}"

	check_mnt "${stratum}" "/proc" "proc" "true"
	check_mnt "${stratum}" "/etc" "fuse.etcfs" "false"
	check_mnt "${stratum}" "/bedrock/run" "tmpfs" "false"
	check_mnt "${stratum}" "/bedrock/strata/bedrock" "" "false"
	check_mnt "${stratum}" "/bedrock/cross" "fuse.crossfs" "false"

	[ -z "${problem}" ]
}

check_stratum() {
	stratum="${1}"
	root="$(stratum_root --empty "${stratum}")"
	problem=""

	check_links "${root}"

	for mnt in $(cfg_values "global" "share"); do
		check_mnt "${stratum}" "${mnt}" "" "true"
	done
	for mnt in $(cfg_values "global" "bind"); do
		check_mnt "${stratum}" "${mnt}" "" "false"
	done

	check_mnt "${stratum}" "/etc" "fuse.etcfs" "false"

	[ -z "${problem}" ]
}

handle_help "${@:-}"

if [ -n "${1:-}" ]; then
	strata="$*"
else
	strata="$(/bedrock/share/brl/backends/brl-list)"
fi

for stratum in ${strata}; do
	problem=""
	if ! is_stratum_or_alias "${stratum}"; then
		abort "No stratum or alias called \"${stratum}\"."
	elif ! has_attr "/bedrock/strata/${stratum}" "show_list"; then
		printf "${color_strat}${stratum}${color_glue}: ${color_norm}hidden\\n"
	elif ! is_enabled "${stratum}"; then
		printf "${color_strat}${stratum}${color_glue}: ${color_norm}disabled\\n"
	elif is_bedrock "${stratum}"; then
		if check_bedrock "${stratum}"; then
			printf "${color_strat}${stratum}${color_glue}: ${color_okay}enabled${color_norm}\\n"
		else
			printf "${color_strat}${stratum}${color_glue}: ${color_alert}broken${color_norm}\\n"
			printf "${problem}"
		fi
	else
		if check_stratum "${stratum}"; then
			printf "${color_strat}${stratum}${color_glue}: ${color_okay}enabled${color_norm}\\n"
		else
			printf "${color_strat}${stratum}${color_glue}: ${color_alert}broken${color_norm}\\n"
			printf "${problem}"
		fi
	fi
done

exit_success
